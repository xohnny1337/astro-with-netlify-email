---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import TextInput from "@components/TextInput.astro";
import TextArea from "@components/TextArea.astro";
import Button from "@components/Button.astro";
---

<Layout title="OTG Solutions AS | Om oss">
  <Header />
  <main>
    <form class="form-grid">
      <TextArea id="msg" label="Melding *" type="text" required />
      <div class="inputs-wrapper">
        <TextInput
          id="email"
          label="Din e-postadresse *"
          type="email"
          required
        />
        <TextInput id="phone" label="Ditt mobilnummer *" type="tel" required />
        <TextInput id="name" label="Navn" />
      </div>
      <submit-button-wrapper>
        <Button>Send</Button>
      </submit-button-wrapper>
    </form>
  </main>
  <Footer />
</Layout>

<script>
  class SubmitButton extends HTMLElement {
    constructor() {
      super();

      const submitButton = this.querySelector("button");

      const email = document?.getElementById("email") as HTMLInputElement;
      const phone = document?.getElementById("phone") as HTMLInputElement;
      const msg = document?.getElementById("msg") as HTMLTextAreaElement;
      const name = document?.getElementById("name") as HTMLTextAreaElement;

      submitButton?.addEventListener("click", async (event) => {
        event.preventDefault();
        const e = email?.value;
        const p = phone?.value;
        const m = msg?.value;
        const n = name?.value;

        if (!m) return msg.focus();
        if (!e) return email.focus();
        if (!p) return phone.focus();

        try {
          await fetch("/api/send-email", {
            method: "POST", // *GET, POST, PUT, DELETE, etc.
            mode: "cors", // no-cors, *cors, same-origin
            cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
            credentials: "same-origin", // include, *same-origin, omit
            headers: {
              "Content-Type": "application/json",
              // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            redirect: "follow", // manual, *follow, error
            referrerPolicy: "no-referrer", // no-referrer, *client
            body: JSON.stringify({
              email: e,
              phone: p,
              msg: m,
              name: n,
            }),
          });
        } catch (err) {
          if (err instanceof Error) {
            throw new Error(err.message);
          }
          throw err;
        }
      });
    }
  }

  customElements.define("submit-button-wrapper", SubmitButton);
</script>

<style>
  .inputs-wrapper {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  .form-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  @media screen and (min-width: 636px) {
    .form-grid {
      grid-template-columns: 1fr 1fr;
    }
    submit-button-wrapper {
      grid-column: span 2;
      text-align: right;
    }
  }
</style>
